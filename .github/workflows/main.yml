# This is a basic workflow to help you get started with Actions

name: Build and deploy

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches:
      - main

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@main

      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: "14"
          
      # 缓存 node_modules
      - name: Cache dependencies
        uses: actions/cache@v2
        id: yarn-cache
        with:
          path: |
            **/node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
            
      # 如果缓存没有命中，安装依赖，根据实际来改，也可以是npm，这里是用的yarn
      - name: Install dependencies
        if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: yarn

      # 如果缓存没有命中，安装依赖，根据实际来改，也可以是npm，这里是用的yarn
      - name: 构建静态文件
        run: yarn docs:build

      # # 上传到github的分支
      # - name: Deploy
      #   uses: JamesIves/github-pages-deploy-action@releases/v3
      #   with:
      #     ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}
      #     # 部署到 gh-pages 分支
      #     BRANCH: gh-pages
      #     # 部署目录为 VuePress 的默认输出目录，这里需要根据项目的目录进行修改
      #     FOLDER: dist
      ## deploy to tencent cos
      - name: 部署到腾讯 COS
        env:
          SECRET_ID: ${{ secrets.TENCENT_SECRET_ID }}
          SECRET_KEY: ${{ secrets.TENCENT_SECRET_KEY }}
          BUCKET: ${{ secrets.TENCENT_COS_BUCKET }}
          REGION: ap-chengdu
        run: |
          sudo pip install coscmd
          coscmd config -a ${SECRET_ID} -s ${SECRET_KEY} -b ${BUCKET} -r ${REGION}
          coscmd upload -rs --delete ./dist/ / -f